{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/PhoneBook/PhoneBook.js","components/App/App.js","index.js"],"names":["defaultState","name","number","ContactForm","state","onChange","event","target","value","setState","onSubmit","preventDefault","props","addContact","isExistContact","alert","id","uuidv4","reset","this","type","Component","Filter","filter","ContactList","contacts","removeContactById","markupContact","contact","removeContact","onClick","length","toLowerCase","trim","includes","map","PhoneBook","newContact","idToRemove","some","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9de5b8f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst defaultState = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    ...defaultState,\r\n  };\r\n\r\n  onChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { addContact, isExistContact } = this.props\r\n    isExistContact(name)\r\n      ? alert(`${name} contact already exists`)\r\n      : addContact({ name, number, id: uuidv4() })\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <h3>Name</h3>\r\n        <input name=\"name\" value={name} onChange={this.onChange} type='text' />\r\n\r\n        <h3>Number</h3>\r\n        <input name=\"number\" value={number} onChange={this.onChange} type='text' />\r\n\r\n        <br />\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\n\r\nfunction Filter({ filter, onChange }) {\r\n  return (\r\n    <>\r\n      <div>Find contacts by name</div>\r\n      <input onChange={onChange} value={filter} name='filter' type='text' />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nfunction ContactList({ contacts, filter, removeContactById }) {\r\n  const markupContact = (contact, removeContact) => {\r\n    return (\r\n      <li key={contact.id}>\r\n        <span>\r\n          {contact.name}: {contact.number}\r\n        </span>\r\n        <button onClick={() => removeContact(contact.id)}>Delete</button>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!!contacts.length && (\r\n        <ul>\r\n          {filter\r\n            ? contacts\r\n              .filter(contact => contact.name.toLowerCase().trim().includes(filter.toLowerCase().trim()))\r\n              .map(contact => markupContact(contact, removeContactById))\r\n            : contacts.map(contact => markupContact(contact, removeContactById))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport Filter from '../Filter/Filter';\r\nimport ContactList from '../ContactList/ContactList';\r\n\r\nconst defaultState = {\r\n  contacts: [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  filter: '',\r\n};\r\n\r\nclass PhoneBook extends Component {\r\n  state = {\r\n    ...defaultState,\r\n  };\r\n\r\n  addContact = newContact => {\r\n    this.setState(({ contacts }) => {\r\n      return { contacts: [...contacts, newContact] };\r\n    });\r\n  };\r\n\r\n  onChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  removeContactById = idToRemove => {\r\n    const { contacts } = this.state;\r\n    this.setState({ contacts: contacts.filter(({ id }) => idToRemove !== id) });\r\n  };\r\n\r\n  isExistContact = name => {\r\n    const { contacts } = this.state;\r\n    return contacts.some(contact => contact.name === name);\r\n  };\r\n\r\n  render() {\r\n    const { filter, contacts } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n\r\n        <ContactForm addContact={this.addContact} isExistContact={this.isExistContact} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter filter={filter} onChange={this.onChange} />\r\n        <ContactList filter={filter} contacts={contacts} removeContactById={this.removeContactById} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PhoneBook;\r\n","import React from 'react';\nimport PhoneBook from '../PhoneBook/PhoneBook';\n\nfunction App() {\n  return <PhoneBook />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}